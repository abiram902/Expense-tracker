{"version":3,"sources":["Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItem.js","Components/ExpenseFilter/ExpenseFilter.js","Components/ExpenseChart/ChartBar.js","Components/ExpenseChart/Chart.js","Components/ExpenseChart/ExpenseChart.js","Components/Expenses/Expenses.js","Components/NewExpenses/ExpenseForm.js","Components/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","ExpenseItem","onClick","e","removeExpenseHandler","exp","id","title","amount","ExpenseFilter","useState","setYear","value","onChange","target","selectedYear","ChartBar","barFill","Math","floor","maxValue","console","log","style","height","label","Chart","maxVal","dataPoints","i","map","item","ExpenseChart","monthlyData","expense","getMonth","Expenses","selYear","setSelectedYear","filteredArray","filter","toString","ExpenseForm","state","setState","hidden","sethidden","handleChange","prevState","name","toggleForm","prev","onSubmit","preventDefault","handleAddExpense","random","parseInt","Date","htmlFor","type","NewExpenses","App","setExpense","addValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f828bd92.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"numeric\" });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expenseDate\">\n      <div className=\"month\">{month}</div>\n      <div className=\"year\">{year}</div>\n      <div className=\"day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\n\r\nconst ExpenseItem = (props)=>{\r\n\r\n  return (\r\n    <div className=\"expenseitems\" onClick={e=>props.removeExpenseHandler(props.exp.id)}>\r\n      <div>\r\n        <ExpenseDate date={props.exp.date} />\r\n      </div>\r\n      <div className=\"title\">{props.exp.title}</div>\r\n      <div className=\"price\">$ {props.exp.amount}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseFilter.css\";\r\n\r\nconst ExpenseFilter = (props) => {\r\n  const [year, setYear] = useState(\"ALL\");\r\n\r\n  const handleSelect = (e) => {\r\n    setYear(e.target.value);\r\n    props.selectedYear(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expense-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year </label>\r\n        <select value={year} onChange={handleSelect}>\r\n          <option value=\"ALL\">All exp</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nfunction ChartBar(props) {\n  const barFill = Math.floor((props.value / props.maxValue) * 100) + \"%\";\n  console.log(`barFill=${barFill}`);\n  return (\n    <div id=\"bar-container\">\n      <div className=\"bar-bar\">\n        <div\n          className=\"bar-fill\"\n          style={{ height: props.maxValue > 0 ? barFill : \"0%\" }}\n        ></div>\n      </div>\n      <div className=\"bar-label\">{props.label}</div>\n    </div>\n  );\n}\n\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nfunction Chart(props) {\n  let maxVal = 0;\n  for (let i of props.dataPoints) {\n    console.log(i, \"i\");\n    maxVal += i.value;\n  }\n  console.log(`maxVal=${maxVal}`);\n  return (\n    <div className=\"chart-container\">\n      {props.dataPoints.map((item) => (\n        <ChartBar\n          id={item.label}\n          value={item.value}\n          label={item.label}\n          maxValue={maxVal}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"./Chart\";\n\nfunction ExpenseChart(props) {\n  const monthlyData = [\n    { label: \"jan\", value: 0 },\n    { label: \"feb\", value: 0 },\n    { label: \"mar\", value: 0 },\n    { label: \"apl\", value: 0 },\n    { label: \"may\", value: 0 },\n    { label: \"jun\", value: 0 },\n    { label: \"jul\", value: 0 },\n    { label: \"aug\", value: 0 },\n    { label: \"sep\", value: 0 },\n    { label: \"oct\", value: 0 },\n    { label: \"nov\", value: 0 },\n    { label: \"dec\", value: 0 },\n  ];\n\n  for (let expense of props.expense) {\n    let month = expense.date.getMonth();\n    monthlyData[month].value += expense.amount;\n  }\n\n  return (\n    <div className='expense-chart'>\n      <Chart dataPoints={monthlyData} />\n    </div>\n  );\n}\n\nexport default ExpenseChart;\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpenseFilter from \"../ExpenseFilter/ExpenseFilter\";\r\nimport ExpenseChart from \"../ExpenseChart/ExpenseChart\";\r\n\r\nfunction Expenses(props) {\r\n  const [selYear, setSelectedYear] = useState(\"ALL\");\r\n\r\n  const filteredArray = selYear === 'ALL'? props.expense : props.expense.filter(\r\n    (item) => item.date.getFullYear().toString() === selYear\r\n  );\r\n\r\n  console.log(filteredArray, \"filter return\");\r\n  const selectedYear = (year) => {\r\n    setSelectedYear(year);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ExpenseFilter selectedYear={selectedYear} />\r\n      <ExpenseChart expense={filteredArray} />\r\n      <div className=\"expenses\">\r\n        {filteredArray.map((item) => (\r\n          <ExpenseItem key={item.id} exp={item} removeExpenseHandler={props.removeExpenseHandler}/>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nfunction ExpenseForm(props) {\r\n  const [state, setState] = useState({\r\n    title: \"\",\r\n    amount: \"\",\r\n    date: \"\",\r\n  });\r\n  const [hidden, sethidden] = useState(true);\r\n  const handleChange = (e) => {\r\n    setState((prevState) => {\r\n      return { ...prevState, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n  const toggleForm = (e) => {\r\n    sethidden((prev) => !prev);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.handleAddExpense({\r\n      id: Math.random().toString(),\r\n      title: state.title,\r\n      amount: parseInt(state.amount),\r\n      date: new Date(state.date),\r\n    });\r\n    toggleForm();\r\n  };\r\n  \r\n\r\n  if (hidden) {\r\n    return (\r\n      <button className=\"btn\" onClick={toggleForm}>\r\n        Add Expene\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form id=\"expense-form\" onSubmit={handleSubmit}>\r\n      <div className=\"form-inputs\">\r\n        <label htmlFor=\"title\">Title</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          id=\"form-title\"\r\n          className=\"inputs\"\r\n          value={state.title}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-inputs\">\r\n        <label htmlFor=\"amount\">Amount</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          id=\"form-amount\"\r\n          className=\"inputs\"\r\n          onChange={handleChange}\r\n          value={state.amount}\r\n        />\r\n      </div>\r\n      <div className=\"form-inputs\">\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          id=\"form-date\"\r\n          className=\"inputs\"\r\n          onChange={handleChange}\r\n          value={state.date}\r\n        />\r\n      </div>\r\n      <div className=\"form-inputs\">\r\n        <button className=\"btn\" onClick={toggleForm}>\r\n          cancel\r\n        </button>\r\n        <button type=\"submit\" className=\"btn\">\r\n          Add Expense\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpenses.css\";\n\nfunction NewExpenses(props) {\n  return (\n    <div className=\"new-expenses\">\n      <ExpenseForm handleAddExpense={props.handleAddExpense} />\n    </div>\n  );\n}\n\nexport default NewExpenses;\n","import { useState } from \"react\";\r\nimport Expenses from \"./Components/Expenses/Expenses\";\r\nimport NewExpenses from \"./Components/NewExpenses/NewExpenses\";\r\nfunction App() {\r\n  const [expense, setExpense] = useState([\r\n    {\r\n      id: \"e1\",\r\n      title: \"medicine\",\r\n      amount: 200,\r\n      date: new Date(2019, 6, 5),\r\n    },\r\n    {\r\n      id: \"e2\",\r\n      title: \"oats\",\r\n      amount: 175,\r\n      date: new Date(2020, 5, 3),\r\n    },\r\n    {\r\n      id: \"e3\",\r\n      title: \"suplemnet\",\r\n      amount: 575,\r\n      date: new Date(2021, 6, 15),\r\n    },\r\n    {\r\n      id: \"e4\",\r\n      title: \"petrol\",\r\n      amount: 500,\r\n      date: new Date(2021, 6, 25),\r\n    },\r\n  ]);\r\n\r\n  const handleAddExpense = (addValue) => {\r\n    setExpense((prev) => {\r\n      return [...prev, addValue];\r\n    });\r\n  };\r\n\r\n  const removeExpenseHandler = (id)=>{\r\n    setExpense(prev=>{\r\n      return prev.filter(item=> item.id !== id)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NewExpenses handleAddExpense={handleAddExpense} />\r\n      <Expenses expense={expense} removeExpenseHandler={removeExpenseHandler} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}